# Run like this: ansible-playbook uninstall.yml
#
# Ensure that you are not adding the latest version to list variable versions_to_uninstall.
- name: Uninstall old versions of Hortonworks/Cloudera software. 
  hosts: all:localhost
  become: true
  gather_facts: false
  vars:
    packages_to_uninstall:
      - 'accumulo'
      - 'avro-doc'
      - 'avro-libs'
      - 'avro-tools'
      - 'atlas-metadata'
      - 'datafu'
      - 'druid'
      - 'gcs'
      - 'hadoop'
      - 'hbase-solr'
      - 'hbase'
      - 'hive'
      - 'hive_warehouse_connector'
      - 'kafka'
      - 'knox'
      - 'livy2'
      - 'oozie'
      - 'ozone'
      - 'parquet'
      - 'phoenix'
      - 'pig'
      - 'ranger'
      - 'search' 
      - 'shc'
      - 'solr'
      - 'spark-atlas-connector'
      - 'spark2'
      - 'sqoop'
      - 'storm'
      - 'superset'
      - 'tez'
      - 'tez_hive2'
      - 'zeppelin'
      - 'zookeeper'
    versions_to_uninstall:
      - '2_5_3_0_37'
      - '2_6_0_3_8'
      - '2_6_5_0_292'
      - '2_6_5_1175_1'
      - '3_1_5_0_152'
      - '3_1_5_6123_1'
      - '3_1_5_6157_1'
    packages_and_versions_list: []

  tasks:
  - name: Build list of packages to uninstall
    set_fact:
      packages_and_versions_list: "{{ packages_and_versions_list + [ item.0 + '_' + item.1 + '*' ] }}"
    loop: "{{ packages_to_uninstall|product(versions_to_uninstall)|list }}"

  - name: Print packages to uninstall
    debug:
      var: packages_and_versions_list

  # - name: Uninstall packages
  #   yum:
  #     name: "{{ packages_and_versions_list }}"
  #     state: absent  
